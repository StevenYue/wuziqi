#!/usr/bin/python3

import pytest
from gomoku_game import Game

@pytest.fixture
def gomoku():
    game = Game(7)
    yield game

def test_win_game_row_logic(gomoku):
    moves = [
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
        [0,0,1,1,1,1,1],
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
    ] 
    assert gomoku._is_moves_won(moves)

    moves = [
        [0,0,0,0,0,0,0],
        [1,1,1,1,1,0,0],
        [0,0,0,0,0,0,0],
        [0,0,1,1,1,1,1],
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
    ] 
    assert gomoku._is_moves_won(moves)

    moves = [
        [0,0,0,0,0,0,0],
        [1,1,0,1,1,0,0],
        [0,0,0,0,0,0,0],
        [0,0,1,0,1,1,1],
        [1,1,1,0,0,0,0],
        [1,1,1,0,1,1,1],
        [0,0,0,0,0,0,0],
    ] 
    assert not gomoku._is_moves_won(moves)

def test_win_game_col_logic(gomoku):
    moves = [
        [0,0,0,1,0,0,0],
        [0,0,0,1,0,0,0],
        [0,0,0,1,0,0,0],
        [0,0,0,1,0,0,0],
        [0,0,0,1,0,0,0],
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
    ] 
    assert gomoku._is_moves_won(moves)

    moves = [
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,1,0],
        [0,0,0,0,0,1,0],
        [0,0,0,0,0,1,0],
        [0,0,0,0,0,1,0],
        [0,0,0,0,0,1,0],
    ] 
    assert gomoku._is_moves_won(moves)

    moves = [
        [0,1,0,0,0,0,0],
        [1,1,0,1,1,1,0],
        [0,1,0,0,0,0,0],
        [0,0,1,0,1,1,1],
        [1,0,1,0,0,0,1],
        [1,1,1,0,1,1,1],
        [1,0,1,0,0,0,1],
    ] 
    assert not gomoku._is_moves_won(moves)

def test_win_game_quad24_logic(gomoku):
    moves = [
        [0,0,0,1,0,0,0],
        [0,0,0,1,0,0,0],
        [1,0,0,0,0,0,0],
        [0,1,0,1,0,0,0],
        [0,0,1,1,0,0,0],
        [0,0,0,1,0,0,0],
        [0,0,0,0,1,0,0],
    ] 
    assert gomoku._is_moves_won(moves)

    moves = [
        [0,0,0,0,0,0,0],
        [0,1,0,0,0,0,0],
        [0,0,1,0,0,0,0],
        [0,0,0,1,0,0,0],
        [0,0,0,0,1,1,0],
        [0,0,0,0,0,1,0],
        [0,0,0,0,0,1,0],
    ] 
    assert gomoku._is_moves_won(moves)

    moves = [
        [0,1,0,0,0,0,0],
        [1,1,0,1,1,1,0],
        [0,0,0,0,0,0,0],
        [0,0,1,0,1,1,1],
        [0,0,1,1,0,0,1],
        [1,1,1,0,1,1,1],
        [0,0,1,0,0,1,1],
    ] 
    assert not gomoku._is_moves_won(moves)

def test_win_game_quad13_logic(gomoku):
    moves = [
        [0,0,0,1,0,0,1],
        [0,0,0,1,0,1,0],
        [0,0,0,0,1,0,0],
        [0,0,0,1,0,0,0],
        [0,0,1,1,0,0,0],
        [0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0],
    ] 
    assert gomoku._is_moves_won(moves)

    moves = [
        [1,0,0,0,0,0,0],
        [0,0,0,0,0,0,1],
        [0,0,0,0,0,1,0],
        [0,0,0,0,1,0,0],
        [0,0,0,1,0,1,0],
        [0,0,1,0,0,1,0],
        [0,1,0,0,0,1,0],
    ] 
    assert gomoku._is_moves_won(moves)

    moves = [
        [0,0,0,0,0,0,0],
        [1,1,0,1,1,1,0],
        [0,0,0,0,1,0,0],
        [0,0,1,0,0,1,1],
        [0,0,1,0,0,1,1],
        [1,1,1,0,1,1,1],
        [0,0,1,1,0,0,1],
    ] 
    assert not gomoku._is_moves_won(moves)

